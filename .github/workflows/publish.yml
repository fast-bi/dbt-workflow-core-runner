name: Publish to PyPI

on:
  push:
    tags:
      - '2025.*.*.*'  # Trigger on year.major.minor.bugfix tags
  workflow_dispatch:  # Allow manual triggering

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install build twine
        pip install -r requirements.txt
        
    - name: Quick quality check (informational only)
      run: |
        echo "üîç Running quick quality checks (informational only - won't block publishing)"
        pip install flake8 black mypy
        echo "üìù Checking code formatting..."
        black --check fast_bi_dbt_runner/ || (echo "‚ö†Ô∏è  Formatting issues found (informational)" && true)
        echo "üîç Checking code quality..."
        flake8 fast_bi_dbt_runner/ --count --exit-zero --max-line-length=127 || (echo "‚ö†Ô∏è  Style issues found (informational)" && true)
        echo "‚úÖ Quality checks completed (informational only)"
      continue-on-error: true
        
    - name: Build package
      run: |
        # Install dependencies first to avoid import errors during build
        pip install -r requirements.txt
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
  
    - name: Publish to PyPI
      if: matrix.python-version == '3.11'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "üì¶ Publishing to PyPI..."
        twine upload dist/*
        echo "‚úÖ Successfully published to PyPI!"
